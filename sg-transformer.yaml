openapi: 3.0.3
info:
  title: Swagger Transformer
  description: ""
  contact:
    email: example@email.com
  version: 1.0.0
externalDocs:
  url: http://externalDocs.example
  description: External Documentation
servers:
  - url: http://sg-transformer.server-dev.example
    description: DEV
  - url: http://sg-transformer.server-prod.example
    description: PROD
tags:
  - name: Pets
    description: Everything about your Pets
paths:
  /dog:
    post:
      summary: The EP to register a dog
      description: Use this EP to register your favorite Dog
      operationId: create
      tags:
        - dog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Khalice
                age:
                  type: integer
                breed:
                  type: string
                  example: Caramelo
      responses:
        "200":
          description: Registered dog
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: integer
        "422":
          description: Unregistered dog
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      type: string
                  status:
                    type: integer
    get:
      operationId: list
      tags:
        - dog
        - another_tag
      parameters:
        - name: breed
          in: query
          description: Filter dogs by Breed
          required: false
          explode: true
          schema:
            enum:
              - Caramelo
              - Labrador
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - type: object
                      properties:
                        name:
                          type: string
                    - type: object
                      properties:
                        age:
                          type: integer
  "/dog/{name}":
    get:
      operationId: find
      tags:
        - dog
      parameters:
        - name: name
          in: path
          description: Filter dogs by Name
          example: Khalice
          required: true
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Ok
